name: Nightly Build

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *" # Run every day at midnight (UTC)

env:
  POETRY_VERSION: "1.8.3"
  PYTHON_VERSION: "3.12"

jobs:
  create-nightly-tag:
    runs-on: ubuntu-latest
    if: github.repository == 'langflowai/langflow'
    defaults:
      run:
        shell: bash
    permissions:
      # Additional permission needed to generate tag
      contents: write
    outputs:
      TAG: ${{ steps.create_tag.outputs.tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Set up Python ${{ env.PYTHON_VERSION }} + Poetry ${{ env.POETRY_VERSION }}
        uses: "./.github/actions/poetry_caching"
        with:
          python-version: ${{ matrix.python-version }}
          poetry-version: ${{ env.POETRY_VERSION }}
          cache-key: ${{ runner.os }}-poetry-${{ env.POETRY_VERSION }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: |
          poetry env use ${{ matrix.python-version }}
          poetry install

      - name: Create tag
        id: create_tag
        run: |
          git config --global user.email "jordan.frazier@datastax.com"
          git config --global user.name "Langflow Bot"

          TAG="$(./scripts/ci/pypi_nightly_tag.py)"
          echo "tag=$TAG" >> $GITHUB_OUTPUT

          ./scripts/ci/update_pyproject_version.py $TAG
          ./scripts/ci/update_pyproject_name.py langflow-nightly

          git add pyproject.toml src/backend/base/pyproject.toml
          git commit -m "Update version and project name in files"

          git tag -a $TAG -m "Langflow nightly $TAG"
          git push origin $TAG
      - if: ${{ failure() }}
        name: Nightly Tag Failure Slack Message
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          RUN_ID: ${{ github.run_id }}
        run: python scripts/slack_notifications.py nightly tag

  frontend-tests:
    name: Run Frontend Tests
    uses: ./.github/workflows/typescript_test.yml
    with:
      tests_folder: "tests/end-to-end"
    secrets:
      OPENAI_API_KEY: "${{ secrets.OPENAI_API_KEY }}"
      STORE_API_KEY: "${{ secrets.STORE_API_KEY }}"

  backend-unit-tests:
    name: Run Backend Unit Tests
    uses: ./.github/workflows/python_test.yml
    with:
      python-versions: '["3.10", "3.11", "3.12"]'

  backend-integration-tests:
    name: Run Backend Integration Tests
    uses: ./.github/workflows/integration_tests.yml
    with:
      python-versions: '["3.10", "3.11", "3.12"]'

  run-nightly-build:
    name: Run Nightly Langflow Build
    needs: [backend-unit-tests, backend-integration-tests]
    uses: ./.github/workflows/release.yml
    with:
      release_package_base: false
      release_package_main: true
      build_docker_base: false
      build_docker_main: true
      create_release: false

  slack-notification:
    name: Send Slack Notification
    needs: run-nightly-build
    runs-on: ubuntu-latest
    steps:
      - name: Send success notification to Slack
        if: success()
        uses: slackapi/slack-github-action@v1.26.0
        with:
          payload: |
            {
              "channel": "#langflow-nightly-builds",
              "username": "GitHub Actions",
              "text": "Nightly Build Successful :white_check_mark:",
              "icon_emoji": ":rocket:"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Send failure notification to Slack
        if: failure()
        uses: slackapi/slack-github-action@v1.26.0
        with:
          payload: |
            {
              "channel": "#langflow-nightly-builds",
              "username": "GitHub Actions",
              "text": "Nightly Build Failed :x:",
              "icon_emoji": ":warning:"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
